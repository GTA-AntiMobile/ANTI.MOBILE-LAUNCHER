package eric.antimobile.launcher.entity;

import com.sun.jna.platform.win32.Advapi32Util;
import com.sun.jna.platform.win32.WinReg;
import java.io.File;
import java.io.IOException;
import java.util.List;
import javax.swing.*;
import javax.swing.Icon;



public class Login {

    private static final String REGISTRY_PATH = "SOFTWARE\\SAMP";
    private static final String VALUE_NAME = "PlayerName";
    
    
    public static Icon getErrorIcon(){
        return new ImageIcon(Config.getErrorLogo());
    }
    
    private static final Icon ERROR_LOGO = getErrorIcon();
    

    public static void performLogin(String sampPath, JTextField txtUsername, JLabel lblFolder, JFrame parentFrame) throws IOException {
        
        
        

        // Validate user input

        Data.saveData(txtUsername, lblFolder);
        if (txtUsername.getText().equals("Nh·∫≠p t√™n nh√¢n v·∫≠t.")) {
            JOptionPane.showMessageDialog(parentFrame,"T√™n nh√¢n v·∫≠t kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng.", "[Anti-Moblie] - L·ªói t√™n nh√¢n v·∫≠t.",JOptionPane.ERROR_MESSAGE, ERROR_LOGO);
        } else if (txtUsername.getText().length() < 3) {
            JOptionPane.showMessageDialog(parentFrame,"T√™n nh√¢n v·∫≠t qu√° ng·∫Øn, nh·∫≠p t√™n nh√¢n v·∫≠t d√†i h∆°n 3 k√≠ t·ª±.","[Anti-Moblie] - L·ªói t√™n nh√¢n v·∫≠t.",JOptionPane.ERROR_MESSAGE,ERROR_LOGO);
        } else if (!sampPath.equals("Ch·ªçn ƒë∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c ch·ª©a samp.exe") && 
                   !sampPath.equalsIgnoreCase("Vui l√≤ng ch·ªçn ƒë∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c ch·ª©a samp.exe !!")) {
            
            File fileToCheck = new File(sampPath, "samp.exe");
            boolean fileExists = fileToCheck.exists();

            if (!fileExists) {
                JOptionPane.showMessageDialog(parentFrame,"Kh√¥ng c√≥ t·ªáp samp.exe ·ªü th∆∞ m·ª•c n√†y, h√£y ch·ªçn l·∫°i.", "[Anti-Moblie] - L·ªói ƒë∆∞·ªùng d·∫´n.",JOptionPane.ERROR_MESSAGE, ERROR_LOGO);
            } else {
                
                // anti cheat scanner
                
//                File folder = new File("D:\\Downloads\\GTA San Andreas (GTAVN.VN)");
//                
//                
//                try {
//                AntiCheatScanner scanner = new AntiCheatScanner(Config.getWhiteList());
//                List<String> result = scanner.scanGameFolder(folder);
//
//                if (result.isEmpty()) {
//                    System.out.println("‚úÖ Game s·∫°ch. Kh√¥ng ph√°t hi·ªán v·∫•n ƒë·ªÅ.");
//                } else {
//                    System.out.println("üîç Ph√°t hi·ªán v·∫•n ƒë·ªÅ:");
//                    for (String issue : result) {
//                        System.out.println(issue);
//                    }
//                }
//
//            } catch (IOException e) {
//                System.err.println("‚ùå Kh√¥ng th·ªÉ n·∫°p whitelist: " + e.getMessage());
//            }
//
//                // TODO: Code kh·ªüi ch·∫°y game ·ªü ƒë√¢y n·∫øu kh√¥ng c√≥ cheat   
                
                AntiCheatScanner scanner = new AntiCheatScanner(Config.getWhiteList());
                List<String> result = scanner.scanGameFolder(new File("D:\\Downloads\\GTA San Andreas (GTAVN.VN)"));

                for (String issue : result) {
                    System.out.println(issue);
                }

                ProcessBuilder processBuilder = new ProcessBuilder(sampPath + File.separator + "samp.exe", Config.getIp(), Config.getPassword() );
                processBuilder.directory(new File(sampPath));

                try {
                    Process process = Runtime.getRuntime().exec("reg query \"HKEY_CLASSES_ROOT\\samp\\shell\\open\\command\"");
                    int exitCode = process.waitFor();
                    if (exitCode != 0) {
                        JOptionPane.showMessageDialog(parentFrame, "B·∫°n h√£y c√†i ƒë·∫∑t l·∫°i SA-MP Client 0.3DL ƒë·ªÉ tham gia", "[Anti-Moblie] - L·ªói k·∫øt n·ªëi.", JOptionPane.ERROR_MESSAGE,ERROR_LOGO);
                    } else {
                        process.destroy();
                        Advapi32Util.registrySetStringValue(WinReg.HKEY_CURRENT_USER, REGISTRY_PATH, VALUE_NAME, txtUsername.getText());
                        try {
                            processBuilder.start();
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                    }
                } catch (IOException | InterruptedException ex) {
                    ex.printStackTrace();
                }
            }
        } else {
            JOptionPane.showMessageDialog(parentFrame, "Vui l√≤ng ch·ªçn ƒë∆∞·ªùng d·∫´n ƒë·∫øn th∆∞ m·ª•c ch·ª©a samp.exe !!", "[Anti-Moblie] - L·ªói ƒë∆∞·ªùng d·∫´n.", JOptionPane.ERROR_MESSAGE, ERROR_LOGO);
        }
    }
}
